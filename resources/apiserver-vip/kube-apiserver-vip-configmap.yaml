# This file hardcodes the VRRP IP and the interface name!
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: kube-apiserver-vip-configmap
  namespace: kube-system
data:
  keepalived.conf: |
    global_defs {
      vrrp_version 3
      vrrp_iptables KUBE-APISERVER-VIP
      #get rid of warning:  default user 'keepalived_script' for script execution does not exist - please create
      script_user root
      enable_script_security
    }

    vrrp_script check_apiserver {
      script "/check-apiserver.sh"
      interval 5
      timeout 30
      init_fail
    }

    vrrp_instance vips {
      state BACKUP
      interface bond0
      virtual_router_id 178
      priority 100
      nopreempt
      advert_int 1

      notify /keepalived-state.sh

      virtual_ipaddress {
        ${apiserver_vip}
      }

      track_script {
        check_apiserver
      }
    }
  check-apiserver.sh: |
    #!/bin/bash
    SA_DIR=/run/secrets/kubernetes.io/serviceaccount
    exec curl --silent --fail --cacert "$SA_DIR/ca.crt" -H "Authorization: Bearer $(cat $SA_DIR/token)" https://127.0.0.1:${apiserver_port}/healthz
  check-health.sh: |
    #!/bin/bash
    set -xo pipefail

    KEEPALIVED_STATE="$(cat /var/run/keepalived.state)"
    [[ $KEEPALIVED_STATE == "" ]] && exit 1

    ip -oneline addr show bond0 up | fgrep ${apiserver_vip}/32
    IP_ADDRESS_EXISTS="$?"

    [[ $KEEPALIVED_STATE == "MASTER" && $IP_ADDRESS_EXISTS == 0 ]] && exit 0
    [[ $KEEPALIVED_STATE == "BACKUP" && $IP_ADDRESS_EXISTS == 1 ]] && exit 0
    [[ $KEEPALIVED_STATE == "FAULT" && $IP_ADDRESS_EXISTS == 1 ]] && exit 0

    # Fail in all other cases
    exit 1
  keepalived-state.sh: |
    #!/bin/bash

    TYPE="$1"
    NAME="$2"
    STATE="$3"

    echo -n "$${STATE}" > /var/run/keepalived.state
    exit 0
